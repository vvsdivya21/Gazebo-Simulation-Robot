<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="gz_example_robot">

<xacro:property name="chassis_width"    value="0.16" />
<xacro:property name="chassis_length"   value="0.34" />
<xacro:property name="chassis_height"   value="0.12" />
<xacro:property name="wheel_separation" value="0.20" />
<xacro:property name="wheel_radius"     value="0.08" />
<xacro:property name="wheel_offset"     value="${wheel_radius/4}" />
<xacro:property name="wheel_width"      value="0.04" />
<xacro:property name="sphere_radius"    value="${wheel_radius+wheel_offset-(chassis_height/2)}" />
<xacro:property name="base_offset"      value="0.08" />
<xacro:property name="footprint_z"      value="${chassis_height/2 + sphere_radius}" />
<xacro:property name="control_config"   value="$(find gz_example_robot_description)/config/diff_drive_control.yaml" />

  <!-- LINKS -->
  <link name="base_footprint"/>

  <link name="base_link">
    <visual>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="${base_offset} 0 0"/>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="${base_offset} 0 0"/>
    </collision>

    <inertial>
      <origin xyz="${(chassis_length/2)+base_offset} 0 ${chassis_height/2}" rpy="0 0 0"/>
      <mass value="2"/>
      <inertia ixx="0.126" ixy="0.0" ixz="0.0" iyy="0.4116" iyz="0.0" izz="0.481"/>
    </inertial>
  </link>

  <link name="left_wheel">
    <visual>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="blue">
        <color rgba="0.1 0.1 0.8 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>

    <inertial>
      <mass value="1"/>
      <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.0032"/>
    </inertial>
  </link>

  <link name="right_wheel">
    <visual>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="blue">
        <color rgba="0.1 0.1 0.8 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>

    <inertial>
      <mass value="1"/>
      <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.0032"/>
    </inertial>
  </link>

  <link name="front_wheel">
    <visual>
      <geometry>
        <sphere radius="${sphere_radius}" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="blue">
        <color rgba="0.1 0.1 0.8 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <sphere radius="${sphere_radius}" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>

    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.00016" ixy="0.0" ixz="0.0" iyy="0.00016" iyz="0.0" izz="0.00016"/>
    </inertial>
  </link>

  <link name="chassis_link">
  <!-- Convenient place to reference sensors to -->
  </link>

  <link name="imu_link">
  <!-- Frame to attach an IMU to -->
  </link> 

  <link name="rgbd_link">
  <!-- Frame to attach an RGBD camera to -->
  </link>

  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder length="0.03" radius="0.03" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 -0.005"/>
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <cylinder length="0.03" radius="0.03" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 -0.005"/>
    </collision>

    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.0005" ixy="0.0" ixz="0.0" iyy="0.0005" iyz="0.0" izz="0.00045"/>
    </inertial>
  </link>


  <!-- JOINTS -->
  <joint name="base_footprint_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="${base_offset} 0 ${footprint_z}" rpy="0 0 0"/>
  </joint>

  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="0 ${wheel_separation/2} -${wheel_offset}" rpy="-${pi/2} 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="0 -${wheel_separation/2} -${wheel_offset}" rpy="-${pi/2} 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <joint name="front_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_wheel"/>
    <origin xyz="${base_offset + (chassis_length/2) - sphere_radius} 0 -${chassis_height/2}" rpy="0 0 0"/>
  </joint>

  <joint name="chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis_link"/>
    <origin xyz="${base_offset} 0 ${chassis_height/2}" rpy="0 0 0"/>
  </joint>

  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <joint name="lidar_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.1 0 0.02" rpy="0 0 0"/>
  </joint>

  <joint name="rgbd_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="rgbd_link"/>
    <origin xyz="${chassis_length/2} 0 -${chassis_height/2}" rpy="0 0 0"/>
  </joint>


  <!-- GAZEBO PLUGINS -->
  <!-- Differential Drive - https://gazebosim.org/api/gazebo/4.5/classignition_1_1gazebo_1_1systems_1_1DiffDrive.html -->
  <gazebo>
    <plugin filename="ignition-gazebo-diff-drive-system" name="ignition::gazebo::systems::DiffDrive">
      <!-- Wheel Joints -->
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>

      <!-- Kinematics -->
      <wheel_separation>${wheel_separation}</wheel_separation>
      <wheel_radius>${wheel_radius}</wheel_radius>

      <odom_publish_frequency>50</odom_publish_frequency>
      
      <!-- TF Frames -->
      <frame_id>/odom</frame_id>
      <child_frame_id>/base_footprint</child_frame_id>

      <!-- topics -->
      <!-- <topic>/model/gz_example_robot/cmd_vel</topic> THIS IS DEFAULT -->
      <!-- <odom_topic>/model/gz_example_robot/odometry</odom_topic> THIS IS DEFAULT-->
      <!-- <tf_topic>/model/gz_example_robot/tf</tf_topic> THIS IS DEFAULT -->
      <!-- <tf_topic></tf_topic> Leave blank if you plan to use a filter + imu (e.g. EKF) -->
    </plugin>
  </gazebo>

  <gazebo>
      <plugin filename="ignition-gazebo-joint-state-publisher-system" name="ignition::gazebo::systems::JointStatePublisher">
        <update_rate>50</update_rate>
        <joint_name>left_wheel_joint</joint_name>
        <joint_name>right_wheel_joint</joint_name>
      </plugin>
  </gazebo>

  <gazebo reference="front_wheel">
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </gazebo>

  <gazebo reference="right_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>

  </gazebo>

  <gazebo reference="left_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
  </gazebo>

  <gazebo reference="lidar_link">
    <sensor type="gpu_lidar" name="generic_lidar_sensor">

      <topic>/model/gz_example_robot/scan</topic>
      <frame_id>lidar_link</frame_id>
      <ignition_frame_id>lidar_link</ignition_frame_id>

      <update_rate>10.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>512</samples>
            <resolution>1</resolution>
            <min_angle>-${pi*0.75}</min_angle>
            <max_angle>${pi*0.75}</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.03</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <always_on>1</always_on>
      <visualize>false</visualize>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libignition-gazebo-sensors-system.so" name="ignition::gazebo::systems::Sensors">
      <render_engine>ogre2</render_engine>
    </plugin>
  </gazebo>


  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <topic>/model/gz_example_robot/imu</topic>
      <frame_id>imu_link</frame_id>
      <ignition_frame_id>imu_link</ignition_frame_id>
      <plugin filename="libignition-gazebo-imu-system.so" name="ignition::gazebo::systems::Imu">
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
     <imu>
     	<angular_velocity>
     	  <x>
     	    <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>
 
</robot>